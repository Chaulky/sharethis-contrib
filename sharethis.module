<?php
/**
 * @file
 * A module that adds one of the ShareThis widget to your website.
 */

/**
 * Implements hook_help.
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */
function sharethis_help($path, $arg) {
  global $base_url;
  switch ($path) {
    case "admin/help#sharethis":
      $return_value = "<p>" . t("This plugin places the ShareThis widget on each node.") . '</p><p>';
      return $return_value . t('For various configuration options please got to') . ' <a href="' . $base_url . '/admin/config/sharethis">The Settings Page</a></p><p>' . t('For more information, please visit') . ' <a href="http://help.sharethis.com/integration/drupal">help.sharethis.com</a></p><br />';
      break;
  }
} 

 /**
 * Implements hook_admin.
 *
 * ShareThis Config Menu.
 */
function sharethis_admin() {
  // First, setup variables we will need.
  
  // Get the path variables setup.
  $my_path = drupal_get_path('module', 'sharethis');
  $current_options_array = get_options_array();
  global $base_url;
  
  // Create the variables related to widget choice.
  $is_five = $current_options_array['widget'] == '5x' ? TRUE : FALSE;
  $four_x = $is_five ? '' : 'st_select';
  $five_x = $is_five ? 'st_select' : '';
  $is_five_multi = $is_five ? 'st_multiW' : '';

  // Create the variables related to button choice.
  $button_choice = $current_options_array['buttons'];
  $bLarge = $button_choice == '_large' ? 'st_select' : '';
  $bChicks = $button_choice == '' ? 'st_select' : '';
  $bClassic = $button_choice == '_button' ? 'st_select' : '';
  $bVcount = $button_choice == '_hcount' ? 'st_select' : '';
  $bHcount = $button_choice == '_vcount' ? 'st_select' : '';
  
  $spriteClass = 'stbc' . $button_choice;
  
  // Create the variables related to services chosen.
  $mServices = $current_options_array['services'];
  
  // Penultimately, load css and js for our module.
  drupal_add_css($my_path . '/ShareThisForm.css');
  drupal_add_js('https://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js', 'external'); // @TODO: Do we really need to load jQuery twice?
  drupal_add_js('http://w.sharethis.com/share5x/js/stcommon.js', 'external');  //This is ShareThis's common library - has a serviceList of all the objects that are currently supported.
  drupal_add_js($my_path . '/ShareThisForm.js');
  
  // Create a configuration page. TODO t() all the statements that are outputted. Look into why this isn't themable.
  $interface = <<<LIMIT

<div class="st_form">
  <h2 class="st_h2">ShareThis Configuration Options</h2><span class='st_formMessage'></span>

  <h3 class="st_h3">Choose a Widget Type:</h3>
  <div class="st_widgetContain">
    <div class="st_widgetPic $is_five_multi">
      <div class="st_widgetPicContain"><img src="$base_url/$my_path/img/widget.png"></img></div>
    </div>
    <span id='st_multiW' class="st_formButton $five_x">MULTI-POST<br />
      <span class="st_formSubtitle">Share Via Oauth</span>
    </span><br />
    <span id='st_classicW' class="st_formButton $four_x">CLASSIC<br />
      <span class="st_formSubtitle">Direct Share</span>
    </span>
  </div>

  <h3 class="st_h3">Choose a Button Type:</h3>
  <div class="st_buttonContain">
    <div class='st_spriteCover'><img id='stb_sprite' class='st_buttonSelectSprite $spriteClass' src="$base_url/$my_path/img/preview_sprite.png"></img></div>
    <img class='st_buttonSelectImage' src="$base_url/$my_path/img/preview_bg.png"></img>
    <span id='stb_large' class="st_formButton st_wIm $bLarge">Large Chicklets</span><br />
    <span id='stb' class="st_formButton st_wIm $bChicks">Small Chicklets</span><br />
    <span id='stb_button' class="st_formButton st_wIm $bClassic">Classic Buttons</span><br />
    <span id='stb_hcount' class="st_formButton st_wIm $bVcount">Horizontal Counters</span><br />
    <span id='stb_vcount' class="st_formButton st_wIm $bHcount">Vertical Counters</span><br />
  </div>

  <h3 class="st_h3">Choose Your Services:</h3>
  <script type="text/javascript">var st_declaredServices = "$mServices";</script>
  <div class="st_formPicker">
    <div class='st_formPickerLeft'></div>
    <div class='st_formPickerMid'>
      <div id='st_up' class='st_arrow'><img class='st_up' src="$base_url/$my_path/img/Direction_Icons_Sprite.png"></img></div>
      <div id='st_left' class='st_arrow'><img class='st_left' src="$base_url/$my_path/img/Direction_Icons_Sprite.png"></img></div>
      <div id='st_right' class='st_arrow'><img class='st_right' src="$base_url/$my_path/img/Direction_Icons_Sprite.png"></img></div>
      <div id='st_down' class='st_arrow'><img class='st_down' src="$base_url/$my_path/img/Direction_Icons_Sprite.png"></img></div>
    </div>
    <div class='st_formPickerRight'></div>
  </div>
  
  <span class="st_formButtonSave">Save Options</span>
  
  <br />
</div>
LIMIT;
  return $interface;
}

 /**
 * Implements hook_menu.
 *
 * This is the ShareThis Config Menu.
 */
function sharethis_menu() {
  $items['admin/config/sharethis'] = array(
    'title' => 'ShareThis Settings',
    'description' => 'Choose widget, button family, and services!',
    'page callback' => 'sharethis_admin',
    'access arguments' => array('access administration pages'),
    'menu_link' => 'sharethis',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/sharethisDB'] = array(
    'page callback' => 'sharethis_DB_update',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access administration pages'),
  );
  return $items;
}

 /**
 * Implements hook_node_view.
 *
 * Inserts ShareThis widget code onto each node view.
 * TODO: Want to add the option somewhere to select nodes.
 *
 * @param node 
 *   The node that is being acted upon
 * @param view_mode 
 *   The type of view (teaser, full, etc)
 * @param langcode
 *   Information about the language
 */
function sharethis_node_view($node, $view_mode, $langcode) {
  // First get all of the options for the sharethis widget from the database:
  $data_options = get_options_array();
  
  // This looks to see if the path variable has been posted by some rewrite module.
  // This is not super efficient, O(N), but N is often less than 20.
  $is_path = FALSE;
  foreach ($node as $k => $v) {
    if ($k == "path") {
      $is_path = TRUE;
    }
  }
  // This will choose the path to use.
  if ($is_path) {
    $path_module = $node->path;
  }
  else {
    $path_module = "/node/" . $node->nid;
  }
  global $base_url;
  // Get the full path to insert into the Share Buttons.
  $mPath = $base_url . $path_module;
  $mTitle = $node->title;
  
  // The share buttons are simply spans of the form class='st_SERVICE_BUTTONTYPE' -- "st" stands for ShareThis.
  $type = $data_options['buttons'];
  $service_array = explode(",", $data_options['services']);
  $st_spans = "";
  for ($i=0; $i<sizeof($service_array); $i++) {
    $service = explode(":", $service_array[$i]);
    $serviceCodeName = $service[0];
    $display = "displaytext=";
    $display .= $service[1];
    $display = $type == "" ? "" : $display;
    $st_spans .= "<span st_url=$mPath st_title='$mTitle' class='st_$serviceCodeName$type' $display></span>";
  }
  
  // These are the ShareThis scripts:
  // If switchTo5x is set to false, then the "classic" widget will be selected.
  $is_five = $data_options['widget'] == '5x' ? 'true' : 'false';
  $st_js = "<script type='text/javascript'>var switchTo5x=$is_five;</script>
  			<script type='text/javascript' src='http://w.sharethis.com/button/buttons.js'></script>
  			<script type='text/javascript'>stLight.options({publisher:''});</script>";

  // This puts the buttons on the node and adds the necessary scripts.
  // You can change the weight to change whether the buttons are near the top or bottom of the node.
  // Default is at the bottom:
  $node->content['my_additional_field'] = array(
    '#markup' => $st_spans . $st_js, 
    '#weight' => 10
  );
}

 /**
 * getOptionArray is a helper function for DB access.
 *
 * Returns options that have been stored in the database.
 */
function get_options_array() {
  $data_options = array();
  $sql = "SELECT st.st_option, st.st_value FROM {st_table} st";
  $result = db_query($sql);
  foreach ($result as $record) {
    $data_options[$record->st_option] = $record->st_value;
  }
  return $data_options;
}

 /**
 * sharethis_DB_update
 *
 * This is the Callback function when you save the options on the configuration page.
 * All it does is update the database with all the posted values.
 */
function sharethis_DB_update() {
  foreach ($_POST as $k => $v) {
    $record = (object) NULL;
    $record->st_option = $k;
    $record->st_value = $v; 
    drupal_write_record('st_table', &$record, 'st_option'); 
  }
  echo "<p>" . t("Changes have been successfully saved!") . "</p>";
}
